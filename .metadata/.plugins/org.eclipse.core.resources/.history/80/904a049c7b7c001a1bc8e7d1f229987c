package org.bestbuy.user.controller;

import java.lang.invoke.MethodHandles;
import java.util.List;

import javax.annotation.Resource;

import org.bestbuy.user.exception.UserNotFoundException;
import org.bestbuy.user.models.UserDTO;
import org.bestbuy.user.service.UserDetailService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.opentracing.Span;
import io.opentracing.Tracer;

@RestController
@RequestMapping(value = "/api/v1/users")
public class UserController {

	private final static Logger LOGGER = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass().getSimpleName());

	@Resource
	private UserDetailService userDetailService;
	
	@Autowired
	private Tracer tracer;
	
	
	@GetMapping
	public List<UserDTO> getUsers() {
		Span span = tracer.buildSpan("get-usersss").start();
		LOGGER.info("Getting all users present in database");
		List<UserDTO> users = userDetailService.getUsers();
		if(users != null) {
			span.setTag("custom.tag_1", "custom_value");
			span.finish();
			return users; 
		}
		span.setTag("http.status_code", 500);
		span.finish();
		return null;
	}
	
	@GetMapping("{userId}")
	public UserDTO getUserById(@PathVariable Integer userId) {
		UserDTO user = userDetailService.getUserById(userId);
		if (user != null) {
			return user;
		}
		throw new UserNotFoundException(userId);
	}

}
